#
# Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

release-info.argument=<file>|add:<key1>=<value1>:<key2>=<value2>:...|del:<key list>

release-info.description=\
<file> option is to load release properties from the supplied file.\n\
add: is to add properties to the 'release' file.\n\
Any number of <key>=<value> pairs can be passed.\n\
del: is to delete the list of keys in release file.

class-for-name.argument=

class-for-name.description=\
Class optimization: convert Class.forName calls to constant loads.

compress.argument=<0|1|2>[:filter=<pattern-list>]

compress.description=\
Compress all resources in the output image.\n\
Level 0: No compression\n\
Level 1: Constant string sharing\n\
Level 2: ZIP.\n\
An optional <pattern-list> filter can be specified to list the pattern of\n\
files to be included.

compact-cp.argument=<resource paths>

compact-cp.description=Constant Pool strings sharing.\n\
By default, all resources are compressed. You can express the set \n\
of resources to compress or not compress (use ^ for negation).

dedup-legal-notices.argument=[error-if-not-same-content]

dedup-legal-notices.description=\
De-duplicate all legal notices.  If error-if-not-same-content is\n\
specified then it will be an error if two files of the same filename\n\
are different.

exclude-files.argument=<pattern-list> of files to exclude

exclude-files.description=\
Specify files to exclude. e.g.: **.java,glob:/java.base/lib/client/**

exclude-resources.argument=<pattern-list> resources to exclude

exclude-resources.description=\
Specify resources to exclude. e.g.: **.jcov,glob:**/META-INF/**

exclude-jmod-section.argument=<section-name>\n\
where <section-name> is \"man\" or \"headers".

exclude-jmod-section.description=\
Specify a JMOD section to exclude

generate-jli-classes.argument=@filename

generate-jli-classes.description=\
Specify a file listing the java.lang.invoke classes to pre-generate. \n\
By default, this plugin may use a builtin list of classes to pre-generate. \n\
If this plugin runs on a different runtime version than the image being \n\
created then code generation will be disabled by default to guarantee \n\
correctness - add ignore-version=true to override this.

system-modules.argument=retainModuleTarget

system-modules.description=Fast loading of module descriptors (always enabled)

onoff.argument=<on|off>

order-resources.argument=<pattern-list> of paths in priority order.  If a @file\n\
is specified, then each line should be an exact match for the path to be ordered

order-resources.description=\
Order resources. e.g.: **/module-info.class,@classlist,/java.base/java/lang/**

strip-debug.description=\
Strip debug information from the output image

strip-native-commands.description=\
Exclude native commands (such as java/java.exe) from the image

vm.argument=<client|server|minimal|all>

vm.description=\
Select the HotSpot VM in the output image.  Default is all

zip.argument=[comma separated list of resource paths]

zip.description=ZIP Compression

include-locales.argument=\
<langtag>[,<langtag>]*

include-locales.description=\
BCP 47 language tags separated by a comma, allowing locale matching\n\
defined in RFC 4647. e.g.: en,ja,*-IN

include-locales.missingpackages=\
Missing locale data packages in jdk.localedata:\n\t

include-locales.nomatchinglocales=\
No matching locales found for \"%s\". Check the specified pattern.

include-locales.invalidtag=\
Invalid language tag: %s

include-locales.localedatanotfound=\
jdk.localedata module was not specified with --add-modules option

main.status.ok=Functional.

main.status.not.ok= Not functional.

plugin.plugins.header=\
List of available plugin options:

plugin.opt.list-plugins=\
\      --list-plugins                    List available plugins

plugin.opt.post-process-path=\
\      --post-process-path <imagefile>   Post process an existing image

plugin.opt.resources-last-sorter=\
\      --resources-last-sorter <name>    The last plugin allowed to sort\n\
\                                        resources

plugin.opt.disable-plugin=\
\      --disable-plugin <pluginname>     Disable the plugin mentioned

plugin.opt.compress=\
\  -c, --compress=<0|1|2>                Enable compression of resources:\n\
\                                          Level 0: No compression\n\
\                                          Level 1: Constant string sharing\n\
\                                          Level 2: ZIP

plugin.opt.strip-debug=\
\  -G, --strip-debug                     Strip debug information

plugin.opt.no-man-pages=\
\      --no-man-pages                    Exclude man pages

plugin.opt.no-header-files=\
\      --no-header-files                 Exclude include header files

main.plugin.name=\
\Plugin Name

main.plugin.class=\
\Plugin Class

main.plugin.module=\
\Plugin Module

main.plugin.category=\
\Category

main.plugin.description=\
\Description

main.plugin.post.processors=\
Image Post Processors:

main.plugin.argument=\
\Argument

main.plugin.range.from=\
Range from

main.plugin.range.to=\
to

main.plugin.option=\
\Option

main.plugin.no.value=\
\<empty>

main.plugin.state=\
Functional state

err.no.such.plugin=No such plugin: {0}

err.provider.not.functional=The provider {0} is not functional.

err.plugin.mutiple.options=More than one plugin enabled by {0} option
err.provider.additional.arg.error=Error in additional argument specification in {0} option: {1}

err.no.plugins.path=No plugins path argument.

err.dir.already.exits=directory already exists: {0}

err.invalid.index=invalid index for option {0}

err.plugin.option.not.set=Option {0} must be set.

warn.thirdparty.plugins=\
Enabling third party plugins can lead to unusable generated image.

warn.thirdparty.plugins.enabled=\
You have enabled third party plugins.
